{"version":3,"sources":["components/card/card.module.css","components/home/home.module.css","components/favs/favs.module.css","components/login/login.module.css","components/card/Card.js","firebase.js","redux/charsDuck.js","components/home/HomePage.js","components/favs/FavPage.js","redux/userDuck.js","components/login/LoginPage.js","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","onClick","side","console","log","Card","name","image","rightClick","leftClick","hide","className","styles","container","card","alt","src","actions","left","size","right","defaultProps","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","collection","initialData","fetching","array","current","favorites","retreiveFavs","dispatch","getState","type","uid","doc","get","then","snap","data","getFavs","user","storage","payload","localStorage","JSON","stringify","catch","e","message","connect","state","chars","characters","addToFavoritesAction","char","shift","push","set","updateDB","removeCharacterAction","nextCharacter","addFav","renderCharacter","map","i","key","length","loggedIn","doGoogleLoginAction","provider","auth","GoogleAuthProvider","signInWithPopup","loginWithGoogle","displayName","email","photoURL","logOutAction","signOut","removeItem","PrivateRoute","path","component","rest","getItem","parse","to","Routes","exact","Home","FavPage","LoginPage","App","activeClassName","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","axios","res","results","err","response","restoreSessionAction","generateStore","client","ApolloClient","uri","WithRouter","WithStore","WithApollo","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.769ef8fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container___Mo5B\",\"card\":\"card_card__39aCa\",\"name\":\"card_name__3P4ju\",\"actions\":\"card_actions__2OBHH\",\"left\":\"card_left__3UMDG\",\"right\":\"card_right__2NC-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__3VGbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"favs_container__cpIy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2RTTx\"};","import React from 'react'\r\nimport styles from './card.module.css'\r\nimport FontAwesome from 'react-fontawesome'\r\nimport PropTypes from 'prop-types'\r\n\r\nlet rick = \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\r\n\r\nfunction onClick(side) {\r\n    return () => console.log(side)\r\n}\r\n\r\nexport default function Card({\r\n    name, image, rightClick, leftClick, hide\r\n}) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.card}>\r\n                <img alt=\"rick\" src={image} />\r\n                <p className={styles.name}>\r\n                    {name}\r\n                </p>\r\n        {!hide && <div className={styles.actions}>\r\n                    <div\r\n                        onClick={leftClick || onClick(\"left\")}\r\n                        className={styles.left}>\r\n                        <FontAwesome\r\n                            name=\"thumbs-down\"\r\n                            size=\"2x\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        onClick={rightClick || onClick(\"right\")}\r\n                        className={styles.right}>\r\n                        <FontAwesome\r\n                            name=\"heart\"\r\n                            size=\"2x\"\r\n                        />\r\n                    </div>\r\n                 </div> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    leftClick: PropTypes.func,\r\n    rightClick: PropTypes.func,\r\n}\r\n\r\nCard.defaultProps = {\r\n    name: \"Rick Sanches\",\r\n    image: rick,\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyB5d_8md7OWQQIgFvP4NWPDrOEQI2pV20k\",\r\n    authDomain: \"rick-y-morty-react.firebaseapp.com\",\r\n    databaseURL: \"https://rick-y-morty-react.firebaseio.com\",\r\n    projectId: \"rick-y-morty-react\",\r\n    storageBucket: \"rick-y-morty-react.appspot.com\",\r\n    messagingSenderId: \"424567064139\",\r\n    appId: \"1:424567064139:web:615d804c94f355ae02afce\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nlet db = firebase.firestore().collection('favs')\r\n\r\nexport function getFavs(uid){\r\n    return db.doc(uid).get()\r\n    .then(snap=>{\r\n      return snap.data().array\r\n    })\r\n}\r\n\r\nexport function updateDB (array, uid){\r\n  return db.doc(uid).set({array})\r\n}\r\n\r\n  export function singOutGoogle () {\r\n    firebase.auth().signOut()\r\n  }\r\n\r\n  export function loginWithGoogle(){\r\n      let provider = new firebase.auth.GoogleAuthProvider()\r\n      return firebase.auth().signInWithPopup(provider)\r\n         .then(snap => snap.user)\r\n  }","import axios from 'axios';\r\nimport {updateDB, getFavs} from '../firebase';\r\n\r\n\r\n// constantes \r\n// podria crearse con un array pero esto es mas avanzado\r\n// redux no recibe undefine o null, sino esta data initial\r\n\r\nlet initialData = {\r\n    fetching: false,\r\n    array:[],\r\n    current:{},\r\n    favorites: []\r\n}\r\n\r\nlet URL = \"https://rickandmortyapi.com/api/character\"\r\n\r\n\r\nlet GET_CHARACTERS = 'GET_CHARACTERS'\r\nlet GET_CHARACTERS_SUCCESS = 'GET_CHARACTERS_SUCCESS'\r\nlet GET_CHARACTERS_ERROR = 'GET_CHARACTERS_ERROR'\r\n\r\nlet REMOVE_CHARACTER = 'REMOVE_CHARACTER'\r\nlet ADD_TO_FAVORITES = 'ADD_TO_FAVORITES'\r\n\r\nlet GET_FAVS = 'GET_FAVS'\r\nlet GET_FAVS_SUCCESS = 'GET_FAVS_SUCCESS'\r\nlet GET_FAVS_ERROR = 'GET_FAVS_ERROR'\r\n// reducer\r\n\r\nexport default function reducer(state=initialData, action){\r\n    switch(action.type) {\r\n        case GET_FAVS_SUCCESS :\r\n            return {...state, fetching:false, favorites: action.payload}\r\n        case GET_FAVS_ERROR :\r\n            return {...state, fetching:false, error:action.payload}\r\n        case GET_FAVS:\r\n            return {...state, fetching:true}\r\n\r\n        case ADD_TO_FAVORITES:\r\n            return { ...state, ...action.payload}\r\n        case REMOVE_CHARACTER:\r\n            return {...state, array: action.payload}\r\n\r\n        case GET_CHARACTERS:\r\n            return {...state, fetching: true }\r\n        case GET_CHARACTERS_ERROR:\r\n            return {...state, fetching: false, error: action.payload }\r\n        case GET_CHARACTERS_SUCCESS:\r\n            return {...state, array: action.payload, fetching: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// aux\r\nfunction saveFavsStorage(storage){\r\n    localStorage.storage = JSON.stringify(storage)\r\n}\r\n\r\n// actions\r\n// estas funciones devuelven otra funcion (action creators)\r\n\r\n// export let restoreFavsAction = () => dispatch =>{\r\n//    let  storage = localStorage.getItem('storage')\r\n//    storage = JSON.parse(storage)\r\n//    if( storage && storage.characters){\r\n//        dispatch({\r\n//            type: GET_FAVS_SUCCESS,\r\n//            payload: storage.characters\r\n//        })\r\n//    }\r\n// }\r\n\r\n\r\nexport let retreiveFavs = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: GET_FAVS\r\n    })\r\n    let {uid} = getState().user\r\n    return getFavs(uid)\r\n    .then(array =>{\r\n        dispatch({\r\n            type: GET_FAVS_SUCCESS,        \r\n            payload: [...array]\r\n        })\r\n        saveFavsStorage(getState())\r\n    // la prueba no funciono\r\n    })\r\n    .catch(e=>{\r\n        console.log(e)\r\n        dispatch({\r\n            type: GET_FAVS_ERROR,\r\n            payload: e.message\r\n        })\r\n    })\r\n}\r\n\r\nexport let addToFavoritesAction =()=> (dispatch, getState)=>{\r\n   let {array, favorites} = getState().characters\r\n   let {uid} = getState().user\r\n   let char = array.shift()\r\n   favorites.push(char)\r\n   updateDB(favorites, uid)\r\n   dispatch({\r\n       type: ADD_TO_FAVORITES,\r\n       payload: {array:[...array], favorites:[...favorites]}\r\n   })\r\n}\r\n\r\nexport let removeCharacterAction = () => (dispatch, getState) =>{\r\n   let {array}= getState().characters\r\n   array.shift()\r\n   dispatch({\r\n       type: REMOVE_CHARACTER,\r\n       payload : [...array]\r\n   })\r\n}\r\n\r\n\r\n\r\nexport let getCharactersAction = () => (dispatch, getState) =>{\r\n    dispatch({\r\n        type: GET_CHARACTERS\r\n    })\r\n    \r\n    \r\n    return axios.get(URL)\r\n        .then(res=> {\r\n            dispatch({\r\n                type:GET_CHARACTERS_SUCCESS,\r\n                payload: res.data.results\r\n            })\r\n        })\r\n    .catch(err=>{\r\n        dispatch({\r\n            type: GET_CHARACTERS_ERROR,  \r\n            payload: err.response.message\r\n        })\r\n    })\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Card from '../card/Card'\r\nimport styles from './home.module.css'\r\nimport { connect} from 'react-redux'\r\nimport {removeCharacterAction,addToFavoritesAction} from '../../redux/charsDuck'\r\n\r\n function Home( {addToFavoritesAction, chars, removeCharacterAction}) {\r\n\r\n    function renderCharacter() {\r\n        let char = chars[0]\r\n        return (\r\n            <Card\r\n             rightClick={addFav}\r\n             leftClick={nextCharacter} \r\n             {...char}/>\r\n        )\r\n    }\r\n\r\n\r\n    function nextCharacter(){\r\n        removeCharacterAction()\r\n    }\r\n\r\n    function addFav (){\r\n        addToFavoritesAction()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2>Personajes de Rick y Morty</h2>\r\n            <div>\r\n                {renderCharacter()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// mape state to prop\r\nfunction mapState(state){\r\n    return{\r\n        chars:state.characters.array\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapState, {addToFavoritesAction, removeCharacterAction})(Home)\r\n\r\n// con connect es como le sacamos los datos a redux","import React from 'react'\r\nimport styles from './favs.module.css'\r\nimport Card from '../card/Card'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction FavPage({ characters = [0] }) {\r\n    function renderCharacter(char, i) {\r\n        return (\r\n            <Card hide {...char} key={i} />\r\n        )\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2>Favoritos</h2>\r\n            {characters.map(renderCharacter)}\r\n            {!characters.length && <h3>No hay personajes agregados</h3>}\r\n        </div>\r\n    )\r\n}\r\nfunction mapState({characters}){\r\n  return  { \r\n      characters: characters.favorites\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(FavPage)","import { loginWithGoogle, singOutGoogle} from '../firebase'\r\nimport {retreiveFavs} from './charsDuck'\r\n\r\n//constants\r\nlet initialData = {\r\n    loggedIn: false,\r\n    fetching:false\r\n}\r\nlet LOGIN = \"LOGIN\"\r\nlet LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nlet LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nlet LOG_OUT = 'LOG_OUT'\r\n//reducer\r\n\r\nexport default function reducer(state = initialData, action) {\r\n    switch(action.type) {\r\n        case LOG_OUT:\r\n             return {...initialData}\r\n       case LOGIN_SUCCESS:\r\n           return {...state, fetching:false, ...action.payload, loggedIn:true}\r\n        case LOGIN_ERROR:\r\n            return { ...state, fetching:false, error:action.payload}\r\n        case LOGIN:\r\n           return { ...state, fetching: true}\r\n       default:\r\n           return state\r\n    }\r\n}\r\n// aux\r\n\r\nfunction saveStorage(storage){\r\n   localStorage.storage = JSON.stringify(storage)\r\n}\r\n\r\n//actions (action creator)\r\nexport let logOutAction = () => (dispatch, getState) =>{\r\n    singOutGoogle()\r\n    dispatch({\r\n        type: LOG_OUT\r\n    })\r\n    localStorage.removeItem('storage')\r\n}\r\n\r\n\r\nexport let restoreSessionAction = () => dispatch =>{\r\n    let storage=  localStorage.getItem('storage')\r\n    storage = JSON.parse(storage)\r\n    if(storage && storage.user) {\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: storage.user\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport let doGoogleLoginAction =() => (dispatch, getState )=>{\r\n   dispatch({\r\n       type:LOGIN\r\n   })\r\n    return loginWithGoogle()\r\n      .then(user=>{\r\n         dispatch({\r\n             type: LOGIN_SUCCESS,\r\n             payload: {\r\n                 uid:user.uid,\r\n                 displayName:user.displayName,\r\n                 email:user.email,\r\n                 photoURL:user.photoURL\r\n             }\r\n         })\r\n         saveStorage(getState())\r\n         retreiveFavs()(dispatch, getState)\r\n      })\r\n      .catch(e=>{\r\n          console.log(e)\r\n          dispatch({\r\n              type: LOGIN_ERROR,\r\n              payload: e.message\r\n          })\r\n      })\r\n}","import React from 'react'\r\nimport styles from './login.module.css'\r\nimport {connect} from 'react-redux'\r\nimport {doGoogleLoginAction, logOutAction} from '../../redux/userDuck'\r\nimport {retreiveFavs} from '../../redux/charsDuck'\r\n\r\nfunction LoginPage({retreiveFavs, logOutAction, loggedIn, fetching, doGoogleLoginAction, }) {\r\n    \r\n    function doLogin(){\r\n        doGoogleLoginAction()\r\n    }\r\n\r\n    function logOut(){\r\n        logOutAction()\r\n    }\r\n    \r\n    if (fetching) return <h2>Cargando...</h2>\r\n    return (\r\n        <div className={styles.container}>\r\n            {loggedIn  ? <h1>\r\n                Cierra tu sesión\r\n            </h1> : <h1>\r\n                Inicia tu sesión\r\n            </h1> }\r\n\r\n            {loggedIn ? <button onClick={logOut}>\r\n                Cerrar sesión\r\n            </button> : <button onClick={doLogin}>\r\n                Inicia  Sesión\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapState({user:{fetching,loggedIn}}){\r\n    return{\r\n        fetching,\r\n        loggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapState, {retreiveFavs, doGoogleLoginAction, logOutAction})(LoginPage)","import React from 'react'\r\nimport { Switch, Route, Redirect} from 'react-router-dom'\r\nimport Home from './components/home/HomePage'\r\nimport FavPage from './components/favs/FavPage'\r\nimport LoginPage from './components/login/LoginPage'\r\n// import GraphHome from './components/home/GraphHome'\r\n\r\nfunction PrivateRoute ({path, component, ...rest}){\r\n   let storage = localStorage.getItem('storage')\r\n   storage = JSON.parse(storage)\r\n   if(storage && storage.user) {\r\n       return <Route path={path} component={component} {...rest}/>\r\n   }else{\r\n       return <Redirect to='/login' {...rest}/>\r\n   }\r\n}\r\n\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute exact path=\"/\" component={Home} />\r\n            <PrivateRoute path=\"/favs\" component={FavPage} />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"nav-bar\">\r\n        <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/\">\r\n          Inicio\r\n        </NavLink>\r\n        <NavLink className=\"link\" activeClassName=\"active\" to=\"/favs\">\r\n          Favoritos\r\n        </NavLink>\r\n        <NavLink className=\"link\" activeClassName=\"active\" to=\"/login\">\r\n          Login\r\n        </NavLink>\r\n      </div>\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport userReducer, {restoreSessionAction} from './userDuck'\r\nimport charsReducer, { getCharactersAction} from './charsDuck'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    user : userReducer,\r\n    characters: charsReducer\r\n})\r\n\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    let store = createStore(\r\n        rootReducer,\r\n        composeEnhancers(applyMiddleware(thunk))\r\n        )\r\n    getCharactersAction()(store.dispatch, store.getState)\r\n    restoreSessionAction()(store.dispatch)\r\n    return store\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport { Provider } from 'react-redux'\r\nimport generateStore from './redux/store'\r\nimport ApolloClient from 'apollo-boost'\r\nimport {ApolloProvider} from 'react-apollo'\r\n\r\nlet store = generateStore()\r\n\r\nlet client = new ApolloClient({\r\n    uri: 'https://rickandmortyapi.com/graphql'\r\n})\r\n\r\nlet WithRouter = () => <BrowserRouter><App /></BrowserRouter>\r\nlet WithStore = () => <Provider store={store} ><WithRouter /></Provider>\r\nlet WithApollo = () => <ApolloProvider client={client}><WithStore/></ApolloProvider>\r\n\r\nReactDOM.render(<WithApollo />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}